{"version":3,"sources":["actions/app.js","actions/data.js","selectors/xhr.js","actions/xhr.js","actions/wallet.js","actions/index.js","config/base.js","config/actions.js","config/dpaths.js","utils/cache.js","components/Message/Verify.js","utils/sl.js","reducers/app.js","reducers/wallet.js","reducers/data.js","reducers/index.js","store/load/index.js","store/load/data.js","store/load/match-location-path.js","utils/compose.js","store/index.js","serviceWorker.js","selectors/theme.js","selectors/wallet.js","components/Header.js","components/Message/Sign.js","components/Message/SignTransaction.js","components/Message/BroadcastSignedTransaction.js","components/Message/Message.js","components/Import/Landing.js","components/Import/Keystore.js","components/Import/Mnemonic.js","components/Import/Import.js","components/Generate/Landing.js","components/Generate/Keystore/Keystore.js","utils/download.js","components/Generate/Keystore/Save.js","components/Generate/Mnemonic/Mnemonic.js","utils/index.js","components/Generate/Mnemonic/Confirm.js","components/Generate/Generate.js","components/Splash.js","components/Settings.js","utils/string.js","components/Home.js","components/Loader.js","components/App.js","index.js","config/index.js"],"names":["toggleTheme","dispatch","getState","a","type","ACTION_TYPE_TOGGLE_THEME","cache","app","theme","updateData","payload","ACTION_TYPE_UPDATE_DATA","loadStuff","console","log","warn","rpcClientSelector","createSelector","state","wallet","signatoryServerUrl","url","transport","HTTPTransport","Client","RequestManager","rpc","method","NProgress","start","set","client","request","result","error","showError","message","sl","history","push","window","location","pathname","showCancelButton","done","e","updateWallet","ACTION_TYPE_UPDATE_WALLET","addAccount","accounts","passphrase","uuid","index","length","account","concat","chooseAccount","logout","forEach","k","importMnemonic","mnemonic","hdPath","name","LOGIC_TYPES_MNEMONIC","importKeystorage","keyfile","LOGIC_TYPES_KEYFILE","importKeyfile","Promise","resolve","filePicker","file","reader","FileReader","onload","data","JSON","parse","readAsText","APP_SLUG","SECONDARY_COLOR","DANGER_COLOR","IS_DEV","process","REACT_APP_IS_DEV","CHAINS","tokenSymbol","networks","3","42","4","5","1","providerUrl","6","Object","entries","network","DEFAULT_SIGNATORY_SERVER_URL","protocol","hostname","DEFAULT_CHAIN_ID","DEFAULT_NETWORK_ID","ETC_TREZOR","label","value","HD_PATHS","v","arguments","localStorage","removeItem","setItem","stringify","getItem","useStyles","makeStyles","padding","row","marginBottom","recoverPublicKeyFromSig","msg","sig","chainId","sigParams","ethUtil","msgHash","Buffer","from","stringToHex","pubKey","r","s","toString","connect","match","mapDispatchToProps","classes","onSubmit","preventDefault","val","target","trim","verifiedAddress","signature","toLowerCase","address","className","id","InputLabelProps","shrink","placeholder","defaultValue","fullWidth","required","variant","color","noop","notify","title","moreOpts","responseText","opts","toUpperCase","text","hasOwnProperty","confirmButtonColor","success","info","warning","showInputError","DEFAULT_STATE","isLoaded","networkId","asyncInitialState","combineReducers","action","assign","this","loadData","Base","reduce","b","storeCreator","loadStore","load","store","createStore","reducer","compose","applyMiddleware","thunk","createBrowserHistory","basename","Boolean","isDarkSelector","isDark","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","overrides","MuiButton","root","borderRadius","web3Selector","Web3","providers","HttpProvider","loginType","isMnemonicType","web3","React","useState","accountMenuAnchorEl","setAaccountMenuAnchorEl","balance","setBalance","chain","handleCloseAccounts","handleAddAccount","handleChooseAccount","onMount","eth","getBalance","useEffect","AppBar","position","Toolbar","IconButton","edge","aria-label","to","component","Link","Typography","Fragment","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","utils","fromWei","Tooltip","navigator","clipboard","writeText","Menu","anchorEl","keepMounted","open","onClose","MenuItem","Divider","map","key","wordBreak","setResult","numberToHex","TextField","multiline","rows","Paper","elevation","buttons","width","SAMPLE","onSignTrasaction","net","getId","getTransactionCount","nonce","parseInt","gas","gasLimit","gasPrice","toHex","toWei","onBroadcastTrasaction","sendSignedTransaction","transactionHash","clsx","disabled","signedTransaction","container","tab","minWidth","fontSize","activeTabContent","paddingTop","ROUTES","ROUTE_COMPONENTS","Sign","Verify","SignTransaction","BroadcastSignedTransaction","ROUTE_LABELS","_","path","replace","activeTab","indexOf","Tabs","indicatorColor","textColor","onChange","newValue","Tab","i","exact","heading","textAlign","section","marginLeft","marginRight","button","toGenerateLink","marginTop","setKeyfile","setHdPath","FormControl","InputLabel","htmlFor","NativeSelect","inputProps","inner","margin","Keystore","Mnemonic","Landing","loader","top","isWorking","cpassphrase","Date","now","description","el","document","createElement","download","href","encodeURIComponent","ev","MouseEvent","dispatchEvent","params","downloaded","setDownloaded","keystore","grid","display","gridTemplateColumns","gridItem","gridItemButton","m","split","word","shuffledMnemonic","shuffle","Badge","badgeContent","sleep","ms","setTimeout","buttonError","background","buttonHighlight","inputMnemonic","setInputMnemonic","wordState","setWordState","inputMnemonicIsValid","hintWord","onClickWord","onRevealNextWord","isValid","invisible","SaveKeystore","ConfirmMnemonic","subheading","highlight","HIGHLIGHT_COLOR","cursor","footer","toSettings","containerinner","backTo","qs","search","formData","setFormData","handleFormDataChange","charAt","slice","Message","Settings","render","Generate","Import","Splash","opacity","fullscreen","style","justifyContent","alignItems","height","left","right","bottom","zIndex","CircularProgress","status","err","user","themeSelector","pane","documentElement","classList","contains","remove","add","Header","Home","Loader","ThemeProvider","CssBaseline","getElementById","setAttribute","body","appendChild","App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bacd2b5.chunk.js","sourcesContent":["import cache from 'utils/cache';\nimport { ACTION_TYPE_TOGGLE_THEME } from 'config';\n\nexport function toggleTheme() {\n  return async(dispatch, getState) => {\n    dispatch({ type: ACTION_TYPE_TOGGLE_THEME });\n    cache('theme', getState().app.theme);\n  };\n}\n","import { ACTION_TYPE_UPDATE_DATA } from 'config';\n\nexport function updateData(payload) {\n  return {\n    type: ACTION_TYPE_UPDATE_DATA,\n    payload,\n  };\n}\n\nexport function loadStuff() {\n  return async(dispatch, getState) => {\n    try {\n      await dispatch(\n        console.log('x')\n      );\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n}\n","import { createSelector } from 'reselect';\nimport { RequestManager, HTTPTransport, Client } from '@open-rpc/client-js';\n\nexport const rpcClientSelector = createSelector(\n  state => state.wallet.signatoryServerUrl,\n  url => {\n    const transport = new HTTPTransport(url);\n    return new Client(new RequestManager([transport]));\n  }\n);\n","import NProgress from 'nprogress';\nimport { rpcClientSelector } from 'selectors/xhr';\n// import { ERR_UNKNOWN } from '@open-rpc/client-js';\nimport { history } from 'store';\nimport sl from 'utils/sl';\n\nexport function rpc(method, ...payload) {\n  return async(dispatch, getState) => {\n    NProgress.start();\n    NProgress.set(0.4);\n\n    const state = getState();\n    const client = rpcClientSelector(state);\n\n    try {\n      const result = await client.request(method, payload);\n      if (result.error) {\n        showError(result.error);\n        throw result.error;\n      }\n      return result;\n    } catch (e) {\n      // if (e.code === ERR_UNKNOWN) {\n      if (e.message === 'Failed to fetch') {\n        sl(\n          'error',\n          `Could not connect to server at ${state.wallet.signatoryServerUrl}. Configure settings?`,\n          'Connection Error',\n          () => history.push(`/settings?back-to=${window.location.pathname}`),\n          {\n            showCancelButton: true,\n          }\n        );\n      } else {\n        showError(e);\n      }\n      throw e;\n    } finally {\n      NProgress.done();\n    }\n  };\n}\n\nfunction showError(e) {\n  sl('error', e.message);\n}\n","import Promise from 'bluebird';\nimport filePicker from 'component-file-picker';\nimport cache from 'utils/cache';\nimport {\n  ACTION_TYPE_UPDATE_WALLET,\n  LOGIC_TYPES_KEYFILE,\n  LOGIC_TYPES_MNEMONIC,\n} from 'config';\nimport { history } from 'store';\nimport { rpc } from './xhr';\n\nexport function updateWallet(payload) {\n  return { type: ACTION_TYPE_UPDATE_WALLET, payload };\n}\n\nexport function addAccount() {\n  return async(dispatch, getState) => {\n    const {\n      wallet: { accounts, passphrase, wallet },\n    } = getState();\n    const account = await dispatch(\n      rpc('getAccountFromMnemonic', {\n        uuid: wallet,\n        passphrase,\n        index: accounts.length,\n      })\n    );\n    dispatch({\n      type: ACTION_TYPE_UPDATE_WALLET,\n      payload: { accounts: accounts.concat(account) },\n    });\n    dispatch(chooseAccount(account));\n  };\n}\n\nexport function chooseAccount(account) {\n  return async(dispatch, getState) => {\n    dispatch({ type: ACTION_TYPE_UPDATE_WALLET, payload: { account } });\n    const {\n      wallet: { accounts },\n    } = getState();\n    cache('account', account);\n    cache('accounts', accounts);\n  };\n}\n\nexport function logout() {\n  return async(dispatch, getState) => {\n    ['wallet', 'passphrase', 'accounts', 'account'].forEach(k =>\n      cache(k, null)\n    );\n    dispatch({\n      type: ACTION_TYPE_UPDATE_WALLET,\n      payload: {\n        account: null,\n        wallet: null,\n        passphrase: null,\n        accounts: [],\n      },\n    });\n    history.push('/');\n  };\n}\n\nexport function importMnemonic(mnemonic, passphrase, hdPath) {\n  return async(dispatch, getState) => {\n    const wallet = await dispatch(\n      rpc('importMnemonic', {\n        name: 'Default',\n        passphrase,\n        mnemonic,\n        hdPath,\n      })\n    );\n\n    const account = await dispatch(\n      rpc('getAccountFromMnemonic', {\n        uuid: wallet,\n        passphrase,\n        index: 0,\n      })\n    );\n    const accounts = [account];\n\n    cache('login_type', LOGIC_TYPES_MNEMONIC);\n    cache('wallet', wallet);\n    cache('account', account);\n    cache('passphrase', passphrase);\n    cache('accounts', accounts);\n\n    dispatch({\n      type: ACTION_TYPE_UPDATE_WALLET,\n      payload: {\n        type: LOGIC_TYPES_MNEMONIC,\n        account,\n        wallet,\n        passphrase,\n        accounts,\n      },\n    });\n  };\n}\n\nexport function importKeystorage(keyfile, passphrase) {\n  return async(dispatch, getState) => {\n    const account = await dispatch(rpc('importKeyfile', passphrase, keyfile));\n    const accounts = [account];\n\n    cache('login_type', LOGIC_TYPES_KEYFILE);\n    cache('wallet', null);\n    cache('account', account);\n    cache('passphrase', passphrase);\n    cache('accounts', accounts);\n\n    dispatch({\n      type: ACTION_TYPE_UPDATE_WALLET,\n      payload: {\n        type: LOGIC_TYPES_KEYFILE,\n        account,\n        wallet: null,\n        passphrase,\n        accounts,\n      },\n    });\n  };\n}\n\nexport function importKeyfile() {\n  return (dispatch, getState) => {\n    return new Promise(resolve => {\n      filePicker(([file]) => {\n        const reader = new FileReader();\n        reader.onload = function() {\n          resolve({ name: file.name, data: JSON.parse(reader.result) });\n        };\n        reader.readAsText(file);\n      });\n    });\n  };\n}\n","export * from './app';\nexport * from './data';\nexport * from './wallet';\nexport * from './xhr';\n","export const APP_SLUG = 'shw';\nexport const SECONDARY_COLOR = '#19a79a';\nexport const DANGER_COLOR = SECONDARY_COLOR;\n\nexport const { REACT_APP_IS_DEV: IS_DEV } = process.env;\nexport const INFURA_API_KEY = process.env.REACT_APP_INFURA_API_KEY;\n\nexport const LOGIC_TYPES_KEYFILE = 'LOGIC_TYPES_KEYFILE';\nexport const LOGIC_TYPES_MNEMONIC = 'LOGIC_TYPES_MNEMONIC';\n\nexport const ETH_CHAIN = 1;\nexport const ETC_CHAIN = 61;\nexport const CHAINS = {\n  [ETH_CHAIN]: {\n    name: 'Ethereum',\n    tokenSymbol: 'ETH',\n    networks: {\n      3: { name: 'ropsten' },\n      42: { name: 'kovan' },\n      4: { name: 'rinkeby' },\n      5: { name: 'goerli' },\n      1: { name: 'mainnet' },\n    },\n  },\n  [ETC_CHAIN]: {\n    name: 'Ethereum Classic',\n    tokenSymbol: 'ETC',\n    networks: {\n      1: { name: 'mainnet', providerUrl: 'https://www.ethercluster.com/etc' },\n      6: { name: 'kotti', providerUrl: 'https://www.ethercluster.com/kotti' },\n      // 63: { name: 'kotti', providerUrl: 'https://www.ethercluster.com/mordor' },\n    },\n  },\n};\n\nObject.entries(CHAINS[ETH_CHAIN].networks).forEach(([id, network]) => {\n  network.providerUrl = `https://${network.name}.infura.io/v3/${INFURA_API_KEY}`;\n});\n\nexport const DEFAULT_SIGNATORY_SERVER_URL = `${window.location.protocol}//${window.location.hostname}:1999`;\nexport const DEFAULT_CHAIN_ID = ETC_CHAIN;\nexport const DEFAULT_NETWORK_ID = 1;\n","export const ACTION_TYPE_TOGGLE_THEME = 'ACTION_TYPE_TOGGLE_THEME';\nexport const ACTION_TYPE_UPDATE_WALLET = 'ACTION_TYPE_UPDATE_WALLET';\nexport const ACTION_TYPE_UPDATE_DATA = 'ACTION_TYPE_UPDATE_DATA';\n","// https://raw.githubusercontent.com/MyCryptoHQ/MyCrypto/4d9b8d3c3eb8bb4dcccd89e725019ed49867c0df/common/v2/config/dpaths.ts\n\nconst ETH_DEFAULT = {\n  label: 'Default (ETH)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETH_TREZOR = {\n  label: 'TREZOR (ETH)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETH_SAFE_T = {\n  label: 'Safe-T (ETH)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETH_LEDGER = {\n  label: 'Ledger (ETH)',\n  value: \"m/44'/60'/0'\", // eslint-disable-line quotes\n};\n\nconst ETC_LEDGER = {\n  label: 'Ledger (ETC)',\n  value: \"m/44'/60'/160720'/0'\", // eslint-disable-line quotes\n};\n\nexport const ETC_TREZOR = {\n  label: 'TREZOR (ETC)',\n  value: \"m/44'/61'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETC_SAFE_T = {\n  label: 'Safe-T (ETC)',\n  value: \"m/44'/61'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETH_TESTNET = {\n  label: 'Testnet (ETH)',\n  value: \"m/44'/1'/0'/0\", // eslint-disable-line quotes\n};\n\nconst EXP_DEFAULT = {\n  label: 'Default (EXP)',\n  value: \"m/44'/40'/0'/0\", // eslint-disable-line quotes\n};\n\nconst UBQ_DEFAULT = {\n  label: 'Default (UBQ)',\n  value: \"m/44'/108'/0'/0\", // eslint-disable-line quotes\n};\n\nconst POA_DEFAULT = {\n  label: 'Default (POA)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst TOMO_DEFAULT = {\n  label: 'Default (TOMO)',\n  value: \"m/44'/889'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ELLA_DEFAULT = {\n  label: 'Default (ELLA)',\n  value: \"m/44'/163'/0'/0\", // eslint-disable-line quotes\n};\n\nconst MUSIC_DEFAULT = {\n  label: 'Default (MUSIC)',\n  value: \"m/44'/184'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETSC_DEFAULT = {\n  label: 'Default (ETSC)',\n  value: \"m/44'/1128'/0'/0\", // eslint-disable-line quotes\n};\n\nconst EGEM_DEFAULT = {\n  label: 'Default (EGEM)',\n  value: \"m/44'/1987'/0'/0\", // eslint-disable-line quotes\n};\n\nconst CLO_DEFAULT = {\n  label: 'Default (CLO)',\n  value: \"m/44'/820'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETH_SINGULAR = {\n  label: 'SingularDTV',\n  value: \"m/0'/0'/0'\", // eslint-disable-line quotes\n};\n\nconst RSK_TESTNET = {\n  label: 'Testnet (RSK)',\n  value: \"m/44'/37310'/0'/0\", // eslint-disable-line quotes\n};\n\nconst RSK_MAINNET = {\n  label: 'Mainnet (RSK)',\n  value: \"m/44'/137'/0'/0\", // eslint-disable-line quotes\n};\n\nconst GO_DEFAULT = {\n  label: 'Default (GO)',\n  value: \"m/44'/6060'/0'/0\", // eslint-disable-line quotes\n};\n\nconst EOSC_DEFAULT = {\n  label: 'Default (EOSC)',\n  value: \"m/44'/2018'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ESN_DEFAULT = {\n  label: 'Default (ESN)',\n  value: \"m/44'/31102'/0'/0\", // eslint-disable-line quotes\n};\n\nconst AKA_DEFAULT = {\n  label: 'Default (AKA)',\n  value: \"m/44'/200625'/0'/0\", // eslint-disable-line quotes\n};\n\nconst PIRL_DEFAULT = {\n  label: 'Default (PIRL)',\n  value: \"m/44'/164'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ATH_DEFAULT = {\n  label: 'Default (ATH)',\n  value: \"m/44'/1620'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETHO_DEFAULT = {\n  label: 'Default (ETHO)',\n  value: \"m/44'/1313114'/0'/0\", // eslint-disable-line quotes\n};\n\nconst MIX_DEFAULT = {\n  label: 'Default (MIX)',\n  value: \"m/44'/76'/0'/0\", // eslint-disable-line quotes\n};\n\nconst REOSC_DEFAULT = {\n  label: 'Default (REOSC)',\n  value: \"m/44'/2894'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ARTIS_SIGMA1 = {\n  label: 'Sigma1 (ATS)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ARTIS_TAU1 = {\n  label: 'Tau1 (ATS)',\n  value: \"m/44'/60'/0'/0\", // eslint-disable-line quotes\n};\n\nconst THUNDERCORE_DEFAULT = {\n  label: 'Default (THUNDERCORE)',\n  value: \"m/44'/1001'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ETI_DEFAULT = {\n  label: 'Default (ETI)',\n  value: \"m/44'/464'/0'/0\", // eslint-disable-line quotes\n};\nconst WEB_DEFAULT = {\n  label: 'Default (WEB)',\n  value: \"m/44'/227'/0'/0\", // eslint-disable-line quotes\n};\n\nconst METADIUM_DEFAULT = {\n  label: 'Default (METADIUM)',\n  value: \"m/44'/916'/0'/0\", // eslint-disable-line quotes\n};\n\nconst SOLIDUM_DEFAULT = {\n  label: 'Default (SOLIDUM)',\n  value: \"m/44'/997'/0'/0\", // eslint-disable-line quotes\n};\n\nconst DEXON_DEFAULT = {\n  label: 'Default (DEXON)',\n  value: \"m/44'/237'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ASK_DEFAULT = {\n  label: 'Default (ASK)',\n  value: \"m/44'/2221'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ASK_TREZOR = {\n  label: 'TREZOR (ASK)',\n  value: \"m/44'/2221'/0'/0\", // eslint-disable-line quotes\n};\n\nconst AUX_DEFAULT = {\n  label: 'Default (AUX)',\n  value: \"m/44'/344'/0'/0\", // eslint-disable-line quotes\n};\n\nconst ERE_DEFAULT = {\n  label: 'Default (ERE)',\n  value: \"m/44'/466'/0'/0\", // eslint-disable-line quotes\n};\n\nexport const HD_PATHS = [\n  ETH_DEFAULT,\n  ETH_TREZOR,\n  ETH_SAFE_T,\n  ETH_LEDGER,\n  ETC_LEDGER,\n  ETC_TREZOR,\n  ETC_SAFE_T,\n  ETH_TESTNET,\n  EXP_DEFAULT,\n  UBQ_DEFAULT,\n  POA_DEFAULT,\n  TOMO_DEFAULT,\n  ELLA_DEFAULT,\n  MUSIC_DEFAULT,\n  ETSC_DEFAULT,\n  EGEM_DEFAULT,\n  CLO_DEFAULT,\n  RSK_MAINNET,\n  RSK_TESTNET,\n  GO_DEFAULT,\n  EOSC_DEFAULT,\n  ESN_DEFAULT,\n  AKA_DEFAULT,\n  PIRL_DEFAULT,\n  ATH_DEFAULT,\n  ETHO_DEFAULT,\n  MIX_DEFAULT,\n  REOSC_DEFAULT,\n  ARTIS_SIGMA1,\n  ARTIS_TAU1,\n  THUNDERCORE_DEFAULT,\n  ETI_DEFAULT,\n  WEB_DEFAULT,\n  METADIUM_DEFAULT,\n  SOLIDUM_DEFAULT,\n  DEXON_DEFAULT,\n  ASK_DEFAULT,\n  ASK_TREZOR,\n  AUX_DEFAULT,\n  ETH_SINGULAR,\n  ERE_DEFAULT,\n];\n\n// PATHS TO BE INCLUDED REGARDLESS OF WALLET FORMAT\n// const EXTRA_PATHS = [ETH_SINGULAR];\n\n// Full length deterministic wallet paths from BIP44\n// https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki\n// normal path length is 4, ledger is the exception at 3\n\n// m / purpose' / coin_type' / account' / change / address_index\n//   |          |            |          |        |\n//   | constant |   index    |  index   | 0 or 1 |\n//   |__________|____________|__________|________|\n\n// whitespace strings are evaluated the same way as nospace strings, except they allow optional spaces between each portion of the string\n// ie. \"m / 44' / 0' / 0'\" is valid, \"m / 4 4' / 0' / 0'\" is invalid\n// export const dPathRegex = /m\\/4[4,9]'\\/[0-9]+\\'\\/[0-9]+(\\'+$|\\'+(\\/[0-1]+$))/;\n// const whitespaceDPathRegex = /m\\s*\\/\\s*44'\\s*\\/\\s*[0-9]+\\'\\s*\\/\\s*[0-9]+(\\'+$|\\'+\\s*(\\/\\s*[0-1]+$))/;\n","import { APP_SLUG } from 'config';\n\nexport default function cache(k, v) {\n  k = `${APP_SLUG}:${k}`;\n\n  switch (arguments.length) {\n    case 2:\n      if (v === null) return window.localStorage.removeItem(k);\n      return window.localStorage.setItem(k, JSON.stringify(v));\n\n    case 1:\n      try {\n        return JSON.parse(window.localStorage.getItem(k));\n      } catch (e) {\n        return null;\n      }\n\n    default:\n      return;\n  }\n}\n\nwindow.cache = cache;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button } from '@material-ui/core';\nimport * as ethUtil from 'ethereumjs-util';\nimport { stringToHex } from '@etclabscore/eserialize';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  result: {\n    padding: 20,\n  },\n  row: {\n    marginBottom: 20,\n  },\n}));\n\nexport const recoverPublicKeyFromSig = (msg, sig, chainId) => {\n  const sigParams = ethUtil.fromRpcSig(sig);\n  const msgHash = ethUtil.hashPersonalMessage(Buffer.from(stringToHex(msg)));\n  const pubKey = ethUtil.ecrecover(\n    msgHash,\n    sigParams.v,\n    sigParams.r,\n    sigParams.s,\n    chainId\n  );\n  return '0x' + ethUtil.publicToAddress(pubKey).toString('hex');\n};\n\nconst Component = ({ account, passphrase, chainId }) => {\n  const classes = useStyles();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const payload = {};\n    ['address', 'message', 'signature'].forEach(k => {\n      const val = (payload[k] = (e.target[k].value ?? '').trim());\n      if (!val) return sl('error', `Please enter a ${val}...`);\n    });\n\n    try {\n      const verifiedAddress = recoverPublicKeyFromSig(\n        payload.message,\n        payload.signature,\n        chainId\n      );\n      sl(\n        verifiedAddress.toLowerCase() === payload.address.toLowerCase()\n          ? 'success'\n          : 'error',\n        `${verifiedAddress} signed the message!`\n      );\n    } catch (e) {\n      sl('error', e.message);\n    }\n  };\n\n  return (\n    <form {...{ onSubmit }} className=\"flex flex--column\">\n      <div className={classes.row}>\n        <TextField\n          id=\"address\"\n          label=\"Address\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder=\"0xf8d8af52db...\"\n          defaultValue={account}\n          fullWidth\n          required\n        />\n      </div>\n      <div className={classes.row}>\n        <TextField\n          id=\"message\"\n          label=\"Message\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'My message...'}\n          fullWidth\n          required\n        />\n      </div>\n      <div className={classes.row}>\n        <TextField\n          id=\"signature\"\n          label=\"Signature\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0x391e8352aa0c87283039fd1dddce0bf9...'}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Verify\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default connect(\n  ({ wallet: { account, passphrase, chainId } }, { match }) => {\n    return { account, passphrase, chainId };\n  },\n  mapDispatchToProps\n)(Component);\n","import sl from 'sweetalert/dist/sweetalert-dev.js';\n// import swal from 'sweetalert/dev/sweetalert.es6.js';\nimport 'sweetalert/dist/sweetalert.css';\nimport Promise from 'bluebird';\n\nconst noop = () => {};\n\nconst notify = (type, msg, title, done = noop, moreOpts = {}) => {\n  if ('error' === type) msg = msg.responseText || msg.message || msg;\n\n  const opts = {\n    title: title || type.toUpperCase() + '!',\n    text: msg,\n    type,\n  };\n\n  for (const k in moreOpts) {\n    if (moreOpts.hasOwnProperty(k)) opts[k] = moreOpts[k];\n  }\n\n  opts.confirmButtonColor = {\n    success: '#A5DC86',\n    info: '##C9DAE1',\n    warning: '#DD6B55',\n    error: '#DD6B55',\n  }[type];\n\n  sl(opts, done);\n};\n\nexport const showInputError = sl.showInputError;\n\nexport const slPrompt = async(msg, title, fn) => {\n  await new Promise(resolve =>\n    notify('warning', msg, title, resolve, {\n      showCancelButton: true,\n      closeOnConfirm: false,\n    })\n  );\n\n  try {\n    await fn();\n    sl.close();\n  } catch (err) {\n    notify('error', err);\n  }\n};\n\nexport const warn = (title, fn) => {\n  notify('warning', 'This action is irreversible', title, fn, {\n    showCancelButton: true,\n  });\n};\n\nexport default notify;\n","import cache from 'utils/cache';\nimport { ACTION_TYPE_TOGGLE_THEME } from 'config';\n\nconst DEFAULT_STATE = {\n  isLoaded: false,\n  error: null,\n  theme: cache('theme') || 'dark',\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPE_TOGGLE_THEME: {\n      return Object.assign({}, state, {\n        theme: state.theme === 'dark' ? 'light' : 'dark',\n      });\n    }\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPE_UPDATE_WALLET } from 'config';\n\nconst DEFAULT_STATE = {\n  signatoryServerUrl: null,\n  chainId: null,\n  networkId: null,\n  type: null,\n  wallet: null,\n  account: null,\n  passphrase: null,\n  accounts: [],\n};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPE_UPDATE_WALLET: {\n      return Object.assign({}, state, action.payload);\n    }\n\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPE_UPDATE_DATA } from 'config';\n\nconst DEFAULT_STATE = {};\n\nexport default (state = DEFAULT_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPE_UPDATE_DATA: {\n      return Object.assign({}, state, action.payload);\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport * as asyncInitialState from 'redux-async-initial-state';\nimport app from './app';\nimport wallet from './wallet';\nimport data from './data';\n\nexport default asyncInitialState.outerReducer(\n  combineReducers({\n    app,\n    wallet,\n    data,\n    asyncInitialState: asyncInitialState.innerReducer, // last\n  })\n);\n","import compose from 'utils/compose';\nimport LoadData from './data';\nimport MatchLocationPath from './match-location-path';\n\nclass Init {\n  async load(getState) {\n    this.state = getState();\n\n    try {\n      await this.loadData();\n      // await this.matchLocationPath();\n    } catch (error) {\n      this.state.app.error = error;\n    }\n\n    this.state.app.isLoaded = true;\n\n    return this.state;\n  }\n}\n\nclass Store extends compose([Init, LoadData, MatchLocationPath]) {}\n\nexport default new Store();\n","import cache from 'utils/cache';\nimport {\n  DEFAULT_SIGNATORY_SERVER_URL,\n  DEFAULT_CHAIN_ID,\n  DEFAULT_NETWORK_ID,\n} from 'config';\n\nexport default Base =>\n  class extends Base {\n    async loadData() {\n      try {\n        const type = cache('login_type');\n        const wallet = cache('wallet');\n        const passphrase = cache('passphrase');\n        const accounts = cache('accounts') || [];\n        const account = cache('account');\n\n        this.state.wallet.type = type;\n        this.state.wallet.wallet = wallet;\n        this.state.wallet.account = account;\n        this.state.wallet.passphrase = passphrase || cache('passphrase');\n        this.state.wallet.accounts = accounts;\n        this.state.wallet.signatoryServerUrl =\n          cache('signatoryServerUrl') || DEFAULT_SIGNATORY_SERVER_URL;\n        this.state.wallet.chainId = cache('chainId') || DEFAULT_CHAIN_ID;\n        this.state.wallet.networkId = cache('networkId') || DEFAULT_NETWORK_ID;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n","// import { getMatchedUrl } from 'utils/location';\n\nexport default Base =>\n  class extends Base {\n    async matchLocationPath() {\n      // const matchedUrl = getMatchedUrl();\n      switch (true) {\n        default:\n      }\n    }\n  };\n","export default function(fns) {\n  return fns.reduce((a, b) => b(a));\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from 'reducers';\nimport * as asyncInitialState from 'redux-async-initial-state';\nimport loadStore from './load';\nimport { createBrowserHistory } from 'history';\n\nconst storeCreator = asyncInitialState.middleware(getState =>\n  loadStore.load(getState)\n);\n\nexport const store = (window.store = createStore(\n  reducer,\n  compose(applyMiddleware(thunk, storeCreator)) /// storeCreator should come last so dispatch works well i.e. returns promises\n));\n\nexport const basename = '/';\n\nexport const history = createBrowserHistory({ basename });\n\nstore.dispatch({ type: 'noop' }); // required for some reason ??\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { SECONDARY_COLOR } from 'config';\nimport { createSelector } from 'reselect';\n\nexport const isDarkSelector = createSelector(\n  state => state.app.theme,\n  theme => theme === 'dark'\n);\n\nexport default createSelector(isDarkSelector, isDark =>\n  createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Source Code Pro',\n        'monospace',\n        // 'Roboto',\n        // 'Avenir',\n        // 'proxima-nova',\n        // 'Source Sans Pro',\n        // 'Avenir',\n        // 'sans-serif',\n      ].join(','),\n    },\n    palette: {\n      type: isDark ? 'dark' : 'light',\n      primary: {\n        main: isDark ? '#ffffff' : '#373836',\n      },\n      secondary: {\n        main: SECONDARY_COLOR,\n      },\n    },\n    overrides: {\n      MuiButton: {\n        root: {\n          borderRadius: 2,\n        },\n      },\n    },\n  })\n);\n","import { createSelector } from 'reselect';\nimport Web3 from 'web3';\nimport { CHAINS } from 'config';\n\nexport const web3Selector = createSelector(\n  state => state.wallet.chainId,\n  state => state.wallet.networkId,\n  (chainId, networkId) => {\n    return new Web3(\n      new Web3.providers.HttpProvider(\n        CHAINS[chainId].networks[networkId].providerUrl\n      )\n    );\n  }\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { Link } from 'react-router-dom';\nimport {\n  IconButton,\n  Tooltip,\n  AppBar,\n  Typography,\n  Toolbar,\n  Menu,\n  MenuItem,\n  Button,\n  Divider,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LightIcon from '@material-ui/icons/Brightness7';\nimport DarkIcon from '@material-ui/icons/Brightness2';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport { isDarkSelector } from 'selectors/theme';\nimport { web3Selector } from 'selectors/wallet';\nimport { LOGIC_TYPES_MNEMONIC, CHAINS } from 'config';\n\nfunction Component({\n  toggleTheme,\n  isDark,\n  account,\n  accounts,\n  addAccount,\n  chooseAccount,\n  logout,\n  isMnemonicType,\n  chainId,\n  networkId,\n  web3,\n}) {\n  const [accountMenuAnchorEl, setAaccountMenuAnchorEl] = React.useState(null);\n  const [balance, setBalance] = React.useState('0');\n\n  const { name: chain, networks, tokenSymbol } = CHAINS[chainId];\n  const { name: network } = networks[networkId];\n\n  const handleOpenAccounts = event => {\n    setAaccountMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseAccounts = () => {\n    setAaccountMenuAnchorEl(null);\n  };\n\n  const handleAddAccount = async() => {\n    await addAccount();\n    handleCloseAccounts();\n  };\n\n  const handleChooseAccount = async account => {\n    await chooseAccount(account);\n    handleCloseAccounts();\n  };\n\n  const handleLogout = () => {\n    handleCloseAccounts();\n    logout();\n  };\n\n  const onMount = async() => {\n    if (account) {\n      setBalance(await web3.eth.getBalance(account));\n    }\n  };\n\n  const copyAddress = () => {\n    navigator.clipboard.writeText(account);\n  };\n\n  React.useEffect(() => {\n    onMount(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, web3]);\n\n  return (\n    <AppBar position=\"fixed\" color=\"inherit\">\n      <Toolbar color=\"inherit\">\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          to={'/'}\n          component={Link}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          variant=\"h6\"\n          className={'flex flex--justify-center flex--grow'}\n        >\n          {/*Signatory Wallet Manager*/}\n        </Typography>\n        &nbsp;\n        {!account ? null : (\n          <React.Fragment>\n            <Button aria-controls=\"chain-network\" aria-haspopup=\"true\">\n              Network: {chain}({network})\n            </Button>\n\n            <Button\n              aria-controls=\"accounts\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenAccounts}\n            >\n              Account: {account} Balance: {web3.utils.fromWei(balance, 'ether')}{' '}\n              {tokenSymbol}\n            </Button>\n\n            <Tooltip title=\"Copy Address\">\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Copy Address\"\n                onClick={copyAddress}\n              >\n                <CopyIcon />\n              </IconButton>\n            </Tooltip>\n\n            <Menu\n              id=\"accounts\"\n              anchorEl={accountMenuAnchorEl}\n              keepMounted\n              open={Boolean(accountMenuAnchorEl)}\n              onClose={handleCloseAccounts}\n            >\n              {isMnemonicType ? null : <MenuItem>SELECT ACCOUNT</MenuItem>}\n              {isMnemonicType ? null : <Divider />}\n              {accounts.map(a => (\n                <MenuItem onClick={() => handleChooseAccount(a)} key={a}>\n                  {a}&nbsp;&nbsp;{a !== account ? null : <CheckIcon />}\n                </MenuItem>\n              ))}\n              {isMnemonicType !== LOGIC_TYPES_MNEMONIC ? null : <Divider />}\n              {isMnemonicType ? null : (\n                <MenuItem onClick={handleAddAccount}>\n                  <AddIcon />\n                  &nbsp;&nbsp;Add Account\n                </MenuItem>\n              )}\n\n              <Divider />\n              {/*\n                <MenuItem to={'/settings'} component={Link}>\n                  <SettingsIcon />\n                  &nbsp;&nbsp;Settings\n                </MenuItem>\n              */}\n              <MenuItem onClick={handleLogout}>\n                <LogoutIcon />\n                &nbsp;&nbsp;Logout\n              </MenuItem>\n            </Menu>\n          </React.Fragment>\n        )}\n        <Tooltip title=\"Settings\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Settings\"\n            to={'/settings'}\n            component={Link}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Toggle light/dark theme\">\n          <IconButton\n            onClick={toggleTheme}\n            color=\"inherit\"\n            aria-label=\"Toggle light/dark theme\"\n          >\n            {isDark ? <LightIcon /> : <DarkIcon />}\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst mapStateToProps = state => {\n  const {\n    wallet: { account, accounts, type: loginType, chainId, networkId },\n  } = state;\n  return {\n    isDark: isDarkSelector(state),\n    account,\n    accounts,\n    isMnemonicType: loginType !== LOGIC_TYPES_MNEMONIC,\n    chainId,\n    networkId,\n    web3: web3Selector(state),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Paper } from '@material-ui/core';\nimport { stringToHex, numberToHex } from '@etclabscore/eserialize';\n\nconst useStyles = makeStyles(theme => ({\n  result: {\n    wordBreak: 'break-all',\n  },\n  row: {\n    marginBottom: 20,\n  },\n}));\n\nconst Component = ({ account, passphrase, rpc, chainId }) => {\n  const classes = useStyles();\n  const [result, setResult] = React.useState(null);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    setResult(null);\n\n    const msg = (e.target.message.value ?? '').trim();\n    const sig = await rpc(\n      'sign',\n      stringToHex(msg),\n      account,\n      passphrase,\n      numberToHex(chainId)\n    );\n\n    setResult(sig);\n  };\n\n  return (\n    <form {...{ onSubmit }} className=\"flex flex--column\">\n      <div className={classes.row}>\n        <TextField\n          id=\"message\"\n          label=\"Message\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'Enter message...'}\n          fullWidth\n          multiline\n          rows=\"2\"\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Sign\n        </Button>\n      </div>\n\n      {!result ? null : (\n        <Paper elevation={0} className={classes.result}>\n          {result}\n        </Paper>\n      )}\n    </form>\n  );\n};\n\nexport default connect(\n  ({ wallet: { account, passphrase, chainId } }, { match }) => {\n    return { account, passphrase, chainId };\n  },\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport NProgress from 'nprogress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Paper } from '@material-ui/core';\nimport { stringToHex, numberToHex } from '@etclabscore/eserialize';\n\nimport * as mapDispatchToProps from 'actions';\nimport { IS_DEV } from 'config';\nimport { web3Selector } from 'selectors/wallet';\n\nconst useStyles = makeStyles(theme => ({\n  result: {\n    wordBreak: 'break-all',\n  },\n  row: {\n    marginBottom: 20,\n  },\n  buttons: {\n    '& > *': {\n      width: 150,\n    },\n  },\n}));\n\nconst SAMPLE = {\n  value: '0.1',\n  data: '',\n  gasPrice: '0.08',\n  gasLimit: '23000',\n};\n\nconst Component = ({ account, passphrase, rpc, web3 }) => {\n  const classes = useStyles();\n  const [result, setResult] = React.useState(null);\n\n  const onSignTrasaction = async e => {\n    e.preventDefault();\n\n    setResult(null);\n\n    const payload = {};\n    ['from', 'to', 'value', 'gasLimit', 'gasPrice', 'nonce', 'data'].forEach(\n      k => {\n        payload[k] = (e.target[k].value ?? '').trim();\n      }\n    );\n\n    try {\n      const networkId = await web3.eth.net.getId();\n      console.log('network(%s)', networkId);\n      payload.nonce = await web3.eth.getTransactionCount(payload.from);\n      const data = stringToHex(payload.data);\n      const sig = await rpc(\n        'signTransaction',\n        {\n          from: payload.from,\n          nonce: numberToHex(parseInt(payload.nonce)),\n          gas: numberToHex(parseInt(payload.gasLimit)),\n          gasPrice: web3.utils.toHex(\n            web3.utils.toWei(payload.gasPrice, 'gwei')\n          ),\n          to: payload.to,\n          value: web3.utils.toHex(web3.utils.toWei(payload.value, 'ether')),\n          data: data === '0x' ? '0x00' : data,\n        },\n        passphrase,\n        numberToHex(networkId)\n      );\n\n      setResult(sig);\n    } catch (e) {\n      console.log(JSON.stringify(e.data, null, 2) || e.message);\n    }\n  };\n\n  const onBroadcastTrasaction = async() => {\n    setResult('');\n    NProgress.start();\n    NProgress.set(0.4);\n\n    const { transactionHash } = await web3.eth.sendSignedTransaction(result);\n\n    NProgress.done();\n    setResult(transactionHash);\n  };\n\n  return (\n    <form onSubmit={onSignTrasaction} className=\"flex flex--column\">\n      <div className={classes.row}>\n        <TextField\n          id=\"from\"\n          label=\"From Address\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0x1234...'}\n          defaultValue={account}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"to\"\n          label=\"To Address\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0x5678...'}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"value\"\n          label=\"Value / Amount to Send (ETH)\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'Amount...'}\n          defaultValue={IS_DEV ? SAMPLE.value : ''}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"gasLimit\"\n          label=\"Gas Limit\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'21000'}\n          defaultValue={SAMPLE.gasLimit}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"gasPrice\"\n          label=\"Gas Price (GWEI)\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0'}\n          defaultValue={SAMPLE.gasPrice}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"nonce\"\n          label=\"Nonce\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0'}\n          fullWidth\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"data\"\n          label=\"Data\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0x5d1b...'}\n          defaultValue={IS_DEV ? SAMPLE.data : ''}\n          fullWidth\n        />\n      </div>\n\n      <div className={clsx(classes.row, classes.buttons)}>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Sign\n        </Button>\n        &nbsp;\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={!result}\n          onClick={onBroadcastTrasaction}\n        >\n          Broadcast\n        </Button>\n      </div>\n\n      {!result ? null : (\n        <div className={classes.row}>\n          <Paper elevation={0} className={classes.result}>\n            {result}\n          </Paper>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default connect((state, { match }) => {\n  const {\n    wallet: { account, passphrase, chainId, networkId },\n  } = state;\n  return { account, passphrase, chainId, networkId, web3: web3Selector(state) };\n}, mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NProgress from 'nprogress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Paper } from '@material-ui/core';\n\nimport * as mapDispatchToProps from 'actions';\nimport { web3Selector } from 'selectors/wallet';\n\nconst useStyles = makeStyles(theme => ({\n  result: {\n    wordBreak: 'break-all',\n  },\n  row: {\n    marginBottom: 20,\n  },\n}));\n\nconst Component = ({ web3, networkId }) => {\n  const classes = useStyles();\n  const [result, setResult] = React.useState(null);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    setResult('');\n    NProgress.start();\n    NProgress.set(0.4);\n\n    const signedTransaction = (e.target.signedTransaction.value ?? '').trim();\n    const { transactionHash } = await web3.eth.sendSignedTransaction(\n      signedTransaction\n    );\n\n    NProgress.done();\n    setResult(transactionHash);\n  };\n\n  return (\n    <form {...{ onSubmit }} className=\"flex flex--column\">\n      <div className={classes.row}>\n        <TextField\n          id=\"signedTransaction\"\n          label=\"Signed Transaction\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'0x4355c47d63924e8a...'}\n          fullWidth\n          multiline\n          rows=\"2\"\n          required\n        />\n      </div>\n      <div className={classes.row}>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Broadcast\n        </Button>\n      </div>\n\n      {!result ? null : (\n        <div className={classes.row}>\n          <Paper elevation={0} className={classes.result}>\n            {result}\n          </Paper>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default connect((state, { match }) => {\n  const {\n    wallet: { networkId },\n  } = state;\n  return { networkId, web3: web3Selector(state) };\n}, mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { Paper, Tabs, Tab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, Switch } from 'react-router-dom';\nimport Sign from './Sign';\nimport Verify from './Verify';\nimport SignTransaction from './SignTransaction';\nimport BroadcastSignedTransaction from './BroadcastSignedTransaction';\nimport { history } from 'store';\n\nconst useStyles = makeStyles(theme => ({\n  container: { width: 800, padding: 50 },\n  tab: {\n    minWidth: 'auto',\n    padding: 7,\n    fontSize: 13,\n  },\n  activeTabContent: {\n    paddingTop: 20,\n  },\n}));\n\nconst ROUTES = [\n  '/',\n  '/verify',\n  '/sign-transaction',\n  '/broadcast-signed-transaction',\n];\nconst ROUTE_COMPONENTS = [\n  Sign,\n  Verify,\n  SignTransaction,\n  BroadcastSignedTransaction,\n];\nconst ROUTE_LABELS = [\n  'Sign Message',\n  'Verify Message',\n  'Sign Transaction',\n  'Broadcast Signed Transaction',\n];\n\nconst Component = ({ path, match }) => {\n  const classes = useStyles();\n  let activeTab = ROUTES.indexOf(path);\n  activeTab = -1 === activeTab ? 0 : activeTab;\n\n  // console.log(activeTab, path);\n\n  const handleActiveTabChange = (event, newValue) => {\n    history.push(`/message${newValue ? ROUTES[newValue] : ''}`);\n  };\n\n  return (\n    <div className={'flex flex--justify-center'}>\n      <Paper className={classes.container}>\n        <Tabs\n          value={activeTab}\n          indicatorColor=\"secondary\"\n          textColor=\"inherit\"\n          onChange={handleActiveTabChange}\n          aria-label=\"tabs\"\n        >\n          {ROUTE_LABELS.map(label => (\n            <Tab className={classes.tab} key={label} {...{ label }} />\n          ))}\n        </Tabs>\n\n        <div className={classes.activeTabContent}>\n          <Switch>\n            {ROUTES.map((path, i) => (\n              <Route\n                exact\n                key={path}\n                path={`/message${ROUTES[i]}`}\n                component={ROUTE_COMPONENTS[i]}\n              />\n            ))}\n          </Switch>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default connect((_, { match }) => {\n  return {\n    path: window.location.pathname.replace('/message', ''),\n  };\n}, mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Button } from '@material-ui/core';\nimport { SECONDARY_COLOR } from 'config';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 50,\n    width: '100%',\n    textAlign: 'center',\n  },\n  section: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  button: {\n    width: 200,\n  },\n  toGenerateLink: {\n    marginTop: 50,\n    '& > a': {\n      color: SECONDARY_COLOR,\n    },\n  },\n}));\n\nfunction Component() {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(\n        classes.container,\n        'flex flex flex--column flex--justify-center flex--align-center flex--grow'\n      )}\n    >\n      <h1\n        className={clsx(classes.heading, 'flex flex-justify-center flex--grow')}\n      >\n        How would you like to access your wallet?\n      </h1>\n\n      <div className=\"flex flex--justify-center\">\n        <div\n          className={clsx(\n            classes.section,\n            'flex flex--column flex--align-center'\n          )}\n        >\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            to={'/import/keystore'}\n            component={Link}\n            className={classes.button}\n          >\n            Keystore File\n          </Button>\n        </div>\n\n        <div\n          className={clsx(\n            classes.section,\n            'flex flex--column flex--align-center'\n          )}\n        >\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            to={'/import/mnemonic'}\n            component={Link}\n            className={classes.button}\n          >\n            Mnemonic Phrase\n          </Button>\n        </div>\n      </div>\n\n      <div className={classes.toGenerateLink}>\n        <Link to=\"/generate\">Don’t have a wallet?</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  row: {\n    marginBottom: 20,\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 30,\n  },\n}));\n\nfunction Component({ importKeyfile, importKeystorage }) {\n  const classes = useStyles();\n  const [keyfile, setKeyfile] = React.useState(null);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!keyfile) {\n      return sl('error', 'Please select the keyfile...');\n    }\n    const passphrase = (e.target.passphrase.value ?? '').trim();\n    await importKeystorage(keyfile.data, passphrase);\n  };\n\n  return (\n    <form\n      {...{ onSubmit }}\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center'\n      )}\n    >\n      <h1 className={classes.heading}>Unlock your Keystore File</h1>\n\n      <div className={classes.row}>\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"secondary\"\n          onClick={async() => {\n            setKeyfile(await importKeyfile());\n          }}\n        >\n          {keyfile ? `Selected (${keyfile.name})` : 'Select Wallet File'}\n        </Button>\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"passphrase\"\n          label=\"Passphrase\"\n          type=\"password\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'(Optional)'}\n          fullWidth\n        />\n      </div>\n\n      <div className={clsx('flex flex--align-center')}>\n        <Button variant=\"outlined\" fullWidth to={'/import'} component={Link}>\n          Cancel\n        </Button>\n        &nbsp; &nbsp;\n        <Button type=\"submit\" variant=\"contained\" fullWidth color=\"secondary\">\n          Import\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  TextField,\n  NativeSelect,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { HD_PATHS, ETC_TREZOR } from 'config';\nimport clsx from 'clsx';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  row: {\n    marginBottom: 20,\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 30,\n  },\n}));\n\nfunction Component({ importMnemonic }) {\n  const classes = useStyles();\n  const [hdPath, setHdPath] = React.useState(ETC_TREZOR.value);\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const mnemonic = (e.target.mnemonic.value ?? '').trim();\n    const passphrase = (e.target.passphrase.value ?? '').trim();\n\n    if (!mnemonic) {\n      return sl('error', 'Please enter the mnemonic phrase...');\n    }\n\n    await importMnemonic(mnemonic, passphrase, hdPath);\n  };\n\n  return (\n    <form\n      {...{ onSubmit }}\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center flex--grow'\n      )}\n    >\n      <h1 className={classes.heading}>Unlock your Mnemonic Phrase</h1>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"mnemonic\"\n          label=\"Mnemonic\"\n          type=\"text\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'jelly practice ...'}\n          fullWidth\n          multiline\n          rows=\"3\"\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"passphrase\"\n          label=\"Passphrase\"\n          type=\"password\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'(Optional)'}\n          fullWidth\n        />\n      </div>\n\n      <FormControl className={classes.row}>\n        <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n          Addresses*\n        </InputLabel>\n        <NativeSelect\n          value={hdPath}\n          onChange={e => setHdPath(e.target.value)}\n          inputProps={{\n            name: 'hdPath',\n            id: 'hdPath',\n          }}\n          fullWidth\n        >\n          {HD_PATHS.map(({ value, label }) => (\n            <option {...{ value }} key={label}>\n              {label} - {value}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n\n      <div className={clsx('flex flex--align-center')}>\n        <Button variant=\"outlined\" fullWidth to={'/import'} component={Link}>\n          Cancel\n        </Button>\n        &nbsp; &nbsp;\n        <Button type=\"submit\" variant=\"contained\" fullWidth color=\"secondary\">\n          Import\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Paper } from '@material-ui/core';\nimport Landing from './Landing';\nimport Keystore from './Keystore';\nimport Mnemonic from './Mnemonic';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  inner: {\n    width: 600,\n    padding: 50,\n    margin: 50,\n  },\n}));\n\nfunction Component({ account }) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.container, 'flex flex--justify-center')}>\n      <Paper className={clsx(classes.inner)}>\n        <Switch>\n          <Route path={'/import/keystore'} component={Keystore} />\n          <Route path={'/import/mnemonic'} component={Mnemonic} />\n          <Route path={'/'} component={Landing} />\n        </Switch>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { account } }) => ({ account }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Button } from '@material-ui/core';\nimport { SECONDARY_COLOR } from 'config';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'relative',\n  },\n  loader: {\n    position: 'absolute',\n    top: '50%',\n  },\n  heading: {\n    marginBottom: 50,\n  },\n  section: {\n    marginLeft: 10,\n    marginRight: 10,\n  },\n  toGenerateLink: {\n    marginTop: 50,\n    '& > a': {\n      color: SECONDARY_COLOR,\n    },\n  },\n}));\n\nfunction Component({ account, isWorking }) {\n  const classes = useStyles();\n\n  return (\n    <div className=\"flex flex--column flex--justify-center flex--align-center\">\n      <h1 className={classes.heading}>Create New Wallet</h1>\n\n      <div className=\"flex flex--justify-center\">\n        <div\n          className={clsx(\n            classes.section,\n            'flex flex--column flex--align-center'\n          )}\n        >\n          <h3>Keystore File</h3>\n\n          <ul>\n            <li>An encrypted JSON file, protected by a password</li>\n            <li>Back it up on a USB drive</li>\n            <li>Cannot be written, printed, or easily transferred to mobile</li>\n            <li>Compatible with Mist, Parity, Geth</li>\n            <li>Provides a single address for sending and receiving</li>\n          </ul>\n\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            to={'/generate/keystore'}\n            component={Link}\n          >\n            Generate a Keystore File\n          </Button>\n        </div>\n\n        <div\n          className={clsx(\n            classes.section,\n            'flex flex--column flex--align-center'\n          )}\n        >\n          <h3>Mnemonic Phrase</h3>\n\n          <ul>\n            <li>A 12-word private seed phrase</li>\n            <li>Back it up on paper or USB drive</li>\n            <li>Can be written, printed, and easily typed on mobile, too</li>\n            <li>Compatible with MetaMask, Jaxx, imToken, and more</li>\n            <li>Provides unlimited addresses for sending and receiving</li>\n          </ul>\n\n          <Button\n            variant=\"contained\"\n            fullWidth\n            color=\"secondary\"\n            to={'/generate/mnemonic'}\n            component={Link}\n          >\n            Generate a Mnemonic Phrase\n          </Button>\n        </div>\n      </div>\n\n      <div className={classes.toGenerateLink}>\n        <Link to=\"/import\">Got a wallet?</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ app: { isWorking }, wallet: { account } }) => ({\n    isWorking,\n    account,\n  }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  row: {\n    marginBottom: 20,\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 30,\n  },\n}));\n\nfunction Component({ history, rpc }) {\n  const classes = useStyles();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    const passphrase = (e.target.passphrase.value ?? '').trim();\n    const cpassphrase = (e.target.cpassphrase.value ?? '').trim();\n\n    if (!passphrase) return sl('error', 'Please enter password...');\n    if (!cpassphrase) return sl('error', 'Confirm password...');\n    if (passphrase !== cpassphrase)\n      return sl('error', 'Passwords do not match.');\n\n    const account = await rpc('createAccount', {\n      name: Date.now().toString(),\n      description: Date.now().toString(),\n      passphrase,\n    });\n    history.push(`/generate/keystore/save/${account}`);\n  };\n\n  return (\n    <form\n      {...{ onSubmit }}\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center'\n      )}\n    >\n      <h1 className={classes.heading}>Generate a Keystore File</h1>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"passphrase\"\n          label=\"Password\"\n          type=\"password\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={'At least 12 characters...'}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={classes.row}>\n        <TextField\n          id=\"cpassphrase\"\n          label=\"Confirm Password\"\n          type=\"password\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          placeholder={''}\n          fullWidth\n          required\n        />\n      </div>\n\n      <div className={clsx('flex flex--align-center')}>\n        <Button variant=\"outlined\" fullWidth to={'/generate'} component={Link}>\n          Cancel\n        </Button>\n        &nbsp; &nbsp;\n        <Button type=\"submit\" variant=\"contained\" fullWidth color=\"secondary\">\n          Generate\n        </Button>\n      </div>\n    </form>\n  );\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Component);\n","export default function(type, data, name) {\n  const el = document.createElement('a');\n  el.download = name;\n  el.href = `data:${type};charset=UTF-8,${encodeURIComponent(data)}`;\n\n  const ev = new MouseEvent('click');\n  el.dispatchEvent(ev);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport download from 'utils/download';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  row: {\n    marginBottom: 20,\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 30,\n  },\n}));\n\nfunction Component({\n  match: {\n    params: { account },\n  },\n  updateWallet,\n  history,\n  rpc,\n}) {\n  const classes = useStyles();\n  const [downloaded, setDownloaded] = React.useState(false);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (!downloaded) {\n      const keystore = JSON.stringify(await rpc('exportAccount', account));\n      download('text/plain', keystore, 'keyfile');\n      setDownloaded(true);\n    } else {\n      sl('success', 'You can now import your keyfile', 'Success', () =>\n        history.push('/import/keystore')\n      );\n    }\n  };\n\n  return !account ? (\n    <Redirect to=\"/generate/keystore\" />\n  ) : (\n    <div\n      {...{ onSubmit }}\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center'\n      )}\n    >\n      <h1 className={classes.heading}>Save your Keystore File</h1>\n\n      <div\n        className={clsx(classes.row, 'flex flex--column flex--align-center')}\n      >\n        <p>Don't lose it! It can't be recovered if you lose it.</p>\n\n        <p>\n          Don't share it! Your funds will be stolen if you use this file on a\n          malicious site.\n        </p>\n\n        <p>\n          Make a Backup! Secure it like the millions of dollars it may one day\n          be worth.\n        </p>\n      </div>\n\n      <div className={clsx('flex flex--align-center')}>\n        <Button\n          variant=\"outlined\"\n          fullWidth\n          to={'/generate/keystore'}\n          component={Link}\n        >\n          Back\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"secondary\"\n          onClick={onSubmit}\n        >\n          {downloaded ? 'Continue' : 'Download'}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(() => ({}), mapDispatchToProps)(Component);\n","import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Badge } from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  heading: {},\n  grid: {\n    marginBottom: 20,\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n  },\n  gridItem: {\n    margin: 10,\n    width: 200,\n  },\n  gridItemButton: {\n    width: 200,\n  },\n}));\n\nfunction Component({ mnemonic = [], updateWallet, importMnemonic, rpc }) {\n  const classes = useStyles();\n\n  const onMount = async() => {\n    const m = (await rpc('generateMnemonic'))\n      .split(' ')\n      .map((word, index) => ({ word, index }));\n    updateWallet({\n      mnemonic: m,\n      shuffledMnemonic: _.shuffle(m),\n    });\n  };\n\n  React.useEffect(() => {\n    onMount(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center flex--grow'\n      )}\n    >\n      <h1 className={classes.heading}>Generate a Mnemonic Phrase</h1>\n\n      <p className=\"center-align\">\n        Write these words down. Do not copy them to your clipboard, or save them\n        anywhere online.\n      </p>\n\n      <div className={'flex flex--justify-center'}>\n        <div className={classes.grid}>\n          {mnemonic.map(({ word, index }) => {\n            return (\n              <div className={classes.gridItem} key={word}>\n                <Badge badgeContent={index + 1} color=\"primary\">\n                  <Button\n                    variant=\"contained\"\n                    fullWidth\n                    color=\"secondary\"\n                    className={clsx(classes.gridItemButton)}\n                  >\n                    {word}\n                  </Button>\n                </Badge>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={'flex flex--align-center'}>\n        <Button variant=\"outlined\" fullWidth to={'/import'} component={Link}>\n          Cancel\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          variant=\"outlined\"\n          fullWidth\n          color=\"secondary\"\n          onClick={onMount}\n        >\n          Regenerate\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"secondary\"\n          to=\"/generate/mnemonic/confirm\"\n          component={Link}\n        >\n          Confirm\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { mnemonic } }) => ({ mnemonic }),\n  mapDispatchToProps\n)(Component);\n","import Promise from 'bluebird';\n\nexport function listToRedux(list) {\n  const ids = [];\n  const data = {};\n  list.forEach(d => {\n    ids.push(d._id);\n    data[d._id] = d;\n  });\n  return { ids, data };\n}\n\nexport const sleep = ms => new Promise(r => setTimeout(r, ms));\n\nexport const sortAndCopy = (prop, desc = true) => {\n  const r1 = desc ? -1 : 1;\n  const r2 = desc ? 1 : -1;\n  return data =>\n    data\n      .sort((a, b) => {\n        if (a[prop] < b[prop]) return r1;\n        if (a[prop] > b[prop]) return r2;\n        return 0;\n      })\n      .map(x => x);\n};\n\nexport const updateEntry = (data, id, update) => {\n  for (let i = 0; i < data.length; i++) {\n    const entry = data[i];\n    if (entry.id === id) {\n      Object.entries(update).forEach(([k, v]) => {\n        entry[k] = v;\n      });\n      break;\n    }\n  }\n  return data;\n};\n","import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Badge } from '@material-ui/core';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { IS_DEV } from 'config';\nimport { sleep } from 'utils';\nimport sl from 'utils/sl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  heading: {},\n  grid: {\n    marginBottom: 20,\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n  },\n  gridItem: {\n    margin: 10,\n    width: 200,\n  },\n  gridItemButton: {\n    width: 200,\n  },\n  buttons: {\n    width: '100%',\n  },\n  buttonError: {\n    background: '#f48fb1 !important',\n  },\n  buttonHighlight: {\n    background: '#90caf9 !important',\n  },\n}));\n\nfunction Component({\n  match: {\n    params: { account },\n  },\n  updateWallet,\n  history,\n  shuffledMnemonic = [],\n  mnemonic = [],\n}) {\n  const classes = useStyles();\n  const [inputMnemonic, setInputMnemonic] = React.useState([]);\n  const [wordState, setWordState] = React.useState({});\n  const inputMnemonicIsValid = inputMnemonic.length === mnemonic.length;\n\n  const hintWord = async({ state, index }) => {\n    setWordState({ index, state });\n    await sleep(300);\n    setWordState({});\n  };\n\n  const onClickWord = async({ index, word }) => {\n    if (index !== inputMnemonic.length) {\n      return await hintWord({ index, state: 'buttonError' });\n    }\n    setInputMnemonic(inputMnemonic.concat(word));\n  };\n\n  const onRevealNextWord = async() => {\n    await hintWord({\n      index: inputMnemonic.length,\n      state: 'buttonHighlight',\n    });\n  };\n\n  const onFinish = () => {\n    sl('success', 'You can now import your mnemonic phrase', 'Success', () =>\n      history.push('/import/mnemonic')\n    );\n  };\n\n  React.useEffect(() => {\n    if (IS_DEV && !shuffledMnemonic.length) {\n      const mnemonic = 'jelly practice crash endless sphere abuse eye angry flash oblige cycle brain'\n        .split(' ')\n        .map((word, index) => ({ word, index }));\n      updateWallet({\n        mnemonic,\n        shuffledMnemonic: _.shuffle(mnemonic),\n      });\n    }\n  }, [shuffledMnemonic.length, updateWallet]);\n\n  return (\n    <div\n      className={clsx(\n        classes.container,\n        'flex flex--column flex--align-center'\n      )}\n    >\n      <h1 className={classes.heading}>Confirm Mnemonic Phrase</h1>\n\n      <p className=\"center-align\">\n        Click the words of your phrase in order.\n        <br />\n        If you've forgotten the next word, click the 'Reveal Next Word' button\n        below.\n      </p>\n\n      <div className={'flex flex--justify-center'}>\n        <div className={classes.grid}>\n          {shuffledMnemonic.map(({ word, index }) => {\n            const isValid = inputMnemonic[index];\n            return (\n              <div className={classes.gridItem} key={word}>\n                <Badge\n                  badgeContent={index}\n                  color=\"primary\"\n                  invisible={!isValid}\n                >\n                  <Button\n                    variant={\n                      wordState.index === index\n                        ? 'contained'\n                        : isValid\n                        ? 'contained'\n                        : 'outlined'\n                    }\n                    fullWidth\n                    color=\"secondary\"\n                    className={clsx(\n                      classes.gridItemButton,\n                      wordState.index !== index\n                        ? null\n                        : classes[wordState.state]\n                    )}\n                    onClick={() => onClickWord({ word, index })}\n                  >\n                    {word}\n                  </Button>\n                </Badge>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className={clsx(classes.buttons, 'flex flex--align-center')}>\n        <Button\n          variant=\"outlined\"\n          fullWidth\n          to={'/generate/mnemonic'}\n          component={Link}\n        >\n          Back\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          variant=\"outlined\"\n          fullWidth\n          color=\"secondary\"\n          onClick={onRevealNextWord}\n        >\n          Reveal Next Word\n        </Button>\n        &nbsp; &nbsp;\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"secondary\"\n          onClick={onFinish}\n          disabled={!inputMnemonicIsValid}\n        >\n          Confirm\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { mnemonic, shuffledMnemonic } }) => ({\n    mnemonic,\n    shuffledMnemonic,\n  }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Paper } from '@material-ui/core';\nimport Landing from './Landing';\nimport Keystore from './Keystore/Keystore';\nimport SaveKeystore from './Keystore/Save';\nimport Mnemonic from './Mnemonic/Mnemonic';\nimport ConfirmMnemonic from './Mnemonic/Confirm';\n\nconst useStyles = makeStyles(theme => ({\n  container: {},\n  inner: {\n    width: 800,\n    padding: 50,\n    margin: 50,\n  },\n}));\n\nfunction Component({ account }) {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.container, 'flex flex--justify-center')}>\n      <Paper className={clsx(classes.inner)}>\n        <Switch>\n          <Route\n            exact\n            path={'/generate/keystore/save/:account'}\n            component={SaveKeystore}\n          />\n          <Route exact path={'/generate/keystore'} component={Keystore} />\n          <Route\n            exact\n            path={'/generate/mnemonic/confirm'}\n            component={ConfirmMnemonic}\n          />\n          <Route exact path={'/generate/mnemonic'} component={Mnemonic} />\n          <Route path={'/'} component={Landing} />\n        </Switch>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { account } }) => ({ account }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { SECONDARY_COLOR as HIGHLIGHT_COLOR } from 'config';\n\nconst useStyles = makeStyles(theme => ({\n  container: { width: 800, padding: 50 },\n  row: { marginBottom: 20 },\n  subheading: {},\n  heading: {},\n  highlight: { color: HIGHLIGHT_COLOR, cursor: 'pointer' },\n  buttons: {\n    '& > *': {\n      marginRight: 10,\n      width: 200,\n    },\n  },\n  footer: {\n    fontSize: 11,\n  },\n  toSettings: {\n    color: HIGHLIGHT_COLOR,\n  },\n}));\n\nfunction Component({ signatoryServerUrl }) {\n  const classes = useStyles();\n  const openSignatoryPage = () => {\n    // shell.openExternal('https://signatory.dev');\n  };\n\n  return (\n    <div className={'flex flex--justify-center'}>\n      <Paper className={classes.container}>\n        <h3 className={clsx(classes.row, classes.subheading)}>\n          Signatory Client\n        </h3>\n\n        <h1 className={clsx(classes.row, classes.heading)}>\n          A Modern, Elegant\n          <br />\n          Ethereum Wallet powered by{' '}\n          <span onClick={openSignatoryPage} className={classes.highlight}>\n            Signatory Signer\n          </span>\n        </h1>\n\n        <div\n          className={clsx(\n            classes.buttons,\n            classes.row,\n            'flex flex--align-center'\n          )}\n        >\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            to=\"/import\"\n            component={Link}\n          >\n            Import wallet\n          </Button>\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"default\"\n            to=\"/generate\"\n            component={Link}\n          >\n            Generate wallet\n          </Button>\n        </div>\n\n        <div className={classes.footer}>\n          Tip: Ensure that you're running signatory server at{' '}\n          <strong>{signatoryServerUrl}</strong>. Click{' '}\n          <Link to=\"/settings\" className={classes.toSettings}>\n            here\n          </Link>{' '}\n          or the settings button in the header above to configure the location.\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { signatoryServerUrl } }) => ({ signatoryServerUrl }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  TextField,\n  Paper,\n  NativeSelect,\n  FormControl,\n  InputLabel,\n} from '@material-ui/core';\nimport { CHAINS } from 'config';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport qs from 'query-string';\nimport clsx from 'clsx';\nimport cache from 'utils/cache';\nimport * as string from 'utils/string';\n\nconst useStyles = makeStyles(theme => ({\n  container: { width: 800 },\n  containerinner: {\n    padding: 50,\n  },\n  row: {\n    marginBottom: 20,\n    width: '100%',\n  },\n  heading: {\n    marginBottom: 30,\n  },\n  button: {\n    width: 150,\n  },\n}));\n\nfunction Component({\n  match,\n  updateWallet,\n  signatoryServerUrl,\n  chainId,\n  networkId,\n  history,\n}) {\n  const classes = useStyles();\n  const query = qs.parse(window.location.search.replace('?', ''));\n  const backTo = query['back-to'] || '/';\n  const [formData, setFormData] = React.useState({ chainId, networkId });\n\n  const handleFormDataChange = data => {\n    setFormData({\n      ...formData,\n      ...data,\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const signatoryServerUrl = (e.target.signatoryServerUrl.value ?? '').trim();\n    const { chainId, networkId } = formData;\n    cache('signatoryServerUrl', signatoryServerUrl);\n    cache('chainId', chainId);\n    cache('networkId', networkId);\n    updateWallet({ chainId, networkId, signatoryServerUrl });\n    history.push(backTo);\n  };\n\n  return (\n    <div className={clsx('flex flex--justify-center')}>\n      <Paper className={classes.container}>\n        <form\n          {...{ onSubmit }}\n          className={clsx(\n            classes.containerinner,\n            'flex flex--column flex--grow'\n          )}\n        >\n          <h1 className={classes.heading}>Settings</h1>\n\n          <div className={classes.row}>\n            <TextField\n              id=\"signatoryServerUrl\"\n              label=\"Signatory Server Url\"\n              type=\"url\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              placeholder={'http://localhost:1999'}\n              defaultValue={signatoryServerUrl}\n              fullWidth\n              required\n            />\n          </div>\n\n          <FormControl className={classes.row}>\n            <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n              Chain*\n            </InputLabel>\n            <NativeSelect\n              value={formData.chainId}\n              onChange={e =>\n                handleFormDataChange({\n                  chainId: parseInt(e.target.value),\n                  networkId: 1,\n                })\n              }\n              inputProps={{\n                name: 'chainId',\n                id: 'chainId',\n              }}\n              fullWidth\n            >\n              {Object.entries(CHAINS).map(([id, { name }]) => (\n                <option key={id} value={id}>\n                  {name}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n\n          <FormControl className={classes.row}>\n            <InputLabel shrink htmlFor=\"age-native-label-placeholder\">\n              Network*\n            </InputLabel>\n            <NativeSelect\n              value={formData.networkId}\n              onChange={e =>\n                handleFormDataChange({ networkId: parseInt(e.target.value) })\n              }\n              inputProps={{\n                name: 'networkId',\n                id: 'networkId',\n              }}\n              fullWidth\n            >\n              {Object.entries(CHAINS[formData.chainId].networks).map(\n                ([id, { name }]) => (\n                  <option key={id} value={id}>\n                    {string.toTitleCase(name)}\n                  </option>\n                )\n              )}\n            </NativeSelect>\n          </FormControl>\n\n          <div className={clsx('flex flex--align-center')}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n            >\n              Save\n            </Button>\n            &nbsp; &nbsp;\n            <Button\n              variant=\"outlined\"\n              to={backTo}\n              component={Link}\n              className={classes.button}\n            >\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet }) => ({ ...wallet }),\n  mapDispatchToProps\n)(Component);\n","export function toTitleCase(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport * as mapDispatchToProps from 'actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Message from './Message/Message';\nimport Import from './Import/Import';\nimport Generate from './Generate/Generate';\nimport Splash from './Splash';\nimport Settings from './Settings';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    margin: 50,\n  },\n}));\n\nfunction Component({ account }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      {account ? (\n        <Switch>\n          <Route path={'/message'} component={Message} />\n          <Route path={'/settings'} component={Settings} />\n          <Route path={'/'} render={() => <Redirect to=\"/message\" />} />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route path={'/generate'} component={Generate} />\n          <Route path={'/import'} component={Import} />\n          <Route path={'/settings'} component={Settings} />\n          <Route path={'/'} render={() => <Splash />} />\n        </Switch>\n      )}\n    </div>\n  );\n}\n\nexport default connect(\n  ({ wallet: { account } }) => ({ account }),\n  mapDispatchToProps\n)(Component);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function({ opacity = 1, fullscreen }) {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        ...(fullscreen\n          ? {\n              position: 'fixed',\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0,\n            }\n          : {}),\n        zIndex: 1000,\n        opacity,\n      }}\n    >\n      <div style={{ position: 'relative' }}>\n        <CircularProgress\n          style={{ position: 'relative' }}\n          left={0}\n          top={0}\n          status=\"loading\"\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as mapDispatchToProps from 'actions';\nimport { ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport { DANGER_COLOR } from 'config';\nimport Header from './Header';\nimport Home from './Home';\nimport Loader from './Loader';\nimport { Router } from 'react-router-dom';\nimport { history } from 'store';\nimport themeSelector, { isDarkSelector } from 'selectors/theme';\nimport { CssBaseline } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  error: { padding: 50, color: DANGER_COLOR },\n}));\n\nfunction Component({ error, isLoaded, theme, isDark }) {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const root = document.documentElement;\n    if (root.classList.contains(isDark ? 'light' : 'dark')) {\n      root.classList.remove(isDark ? 'light' : 'dark');\n      root.classList.add(isDark ? 'dark' : 'light');\n    }\n  }, [isDark]);\n\n  let pane;\n  if (error) {\n    pane = <div className={classes.error}>{error}</div>;\n  } else if (isLoaded) {\n    pane = (\n      <div className=\"flex-grow\">\n        <Header />\n        <Home />\n      </div>\n    );\n  } else {\n    pane = <Loader fullscreen />;\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router {...{ history }}>\n        <div>{pane}</div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default connect(state => {\n  const { app, user } = state;\n  const { isLoaded, error } = app;\n  let err;\n  if (error) {\n    console.log(error);\n    err = error.message || 'Error Loading Application!';\n  }\n\n  return {\n    isLoaded,\n    user,\n    error: err,\n    theme: themeSelector(state),\n    isDark: isDarkSelector(state),\n  };\n}, mapDispatchToProps)(Component);\n","import 'nprogress/nprogress.css';\nimport './styles';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from 'store';\nimport App from 'components/App';\n\n(async() => {\n  document.documentElement.classList.remove('anim-loading');\n  document.getElementById('loader-container').remove();\n  const root = document.createElement('div');\n  root.setAttribute('id', 'root');\n  document.body.appendChild(root);\n\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n})();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export * from './base';\nexport * from './actions';\nexport * from './ui';\nexport * from './dpaths';\n"],"sourceRoot":""}